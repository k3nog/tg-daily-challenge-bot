import json
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
with open("challenges.json", "r", encoding="utf-8") as f:
    challenges = json.load(f)

user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —á–µ–ª–ª–µ–Ω–¥–∂–µ–π. –ù–∞–ø–∏—à–∏ /challenge, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ.")

async def challenge(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    task = random.choice(challenges)
    user_data[user_id] = user_data.get(user_id, {"completed": 0, "skipped": 0})
    user_data[user_id]["current_task"] = task["id"]
    await update.message.reply_text(f"üéØ –¢–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n{task['text']}")

async def completed(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in user_data and "current_task" in user_data[user_id]:
        user_data[user_id]["completed"] += 1
        del user_data[user_id]["current_task"]
        await update.message.reply_text("‚úÖ –ó–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ!")
    else:
        await update.message.reply_text("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.")

async def skip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in user_data and "current_task" in user_data[user_id]:
        user_data[user_id]["skipped"] += 1
        del user_data[user_id]["current_task"]
        await update.message.reply_text("‚ö†Ô∏è –ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
    else:
        await update.message.reply_text("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.")

async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    stats = user_data.get(user_id, {"completed": 0, "skipped": 0})
    await update.message.reply_text(
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats['completed']}\n‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {stats['skipped']}"
    )

TOKEN = "8427261120:AAHGE_1LIEXsjxlut4Jyt_9aKqtfGY0HLDg"

app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("challenge", challenge))
app.add_handler(CommandHandler("completed", completed))
app.add_handler(CommandHandler("skip", skip))
app.add_handler(CommandHandler("stats", stats))

app.run_polling()
